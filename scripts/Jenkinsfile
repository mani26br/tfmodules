pipeline {
    options {
        timestamps()
        skipDefaultCheckout()
    }
    agent {label 'internal-build.ncats'}
    parameters {
        string(name: 'AWSACCOUNTID', defaultValue: '', description: 'AWS Account ID (mandatory)')
        string(name: 'ENVIRONMENT', defaultValue: 'cpe', description: 'Role Name (mandatory)')
        string(name: 'PROJECT', defaultValue: '', description: 'Project Name (mandatory)')
        string(name: 'REGION', defaultValue: 'us-east-1', description: 'Region Name (mandatory)')
    }
    environment {
        PROJECT_NAME     = "$PROJECT"
        INIT_TOKEN       = credentials('Vault-Access')                        // OIDC provider this token is Auto Generated //
        SPHINX_TOKEN     = credentials('ncatssvcdvops-platform-services')     // PatToken Read Only Access for the DevOps Artifacts Repo https://github.com/Sphinx-Automation/devops-pipeline-artifacts.git //
        ROLE_NAME        = "$ENVIRONMENT-$PROJECT_NAME"                      // Role Name is Mandatory Variable for Vault //
        APP_TYPE         = "deploy-api-keys"
    }
    stages {
        stage('getSecrets By Role') {
            steps {
                cleanWs()
                checkout scm
                script {
                sh '''
                    ### Cloning the repo from DevOps Artifacts Repository Repo ###
                    git clone https://$SPHINX_TOKEN@github.com/Sphinx-Automation/devops-pipeline-artifacts.git
                    ###  Running the script with Env specific to Authenticate Vault & Get Application Secrets for Docker Token###
                    cd devops-pipeline-artifacts/application
                    /bin/bash getAppSecretsByRole.sh
                    '''
                }
            }
        }
        stage('Py Script RUN') {
            steps {
                configFileProvider([
                    configFile(fileId: 'prepare.sh', targetLocation: 'prepare.sh')
                ]){
                sh '''#!/bin/bash
                    source prepare.sh
                    cd scripts
                    python3.7 attaching_iam_policy_to_role.py access_key="$AWSACCESSKEY" secret_key="$AWSSECRETKEY" accountid="$AWSACCOUNTID" region="$REGION"
                    '''
                }
            }
        }
    }
}